name: CI

on:
  push:
    branches: [main]

permissions:
  contents: read # for checkout and git clone
  # actions: write # for uploading artifacts if any (optional here)
  # workflows: write # if triggering other workflows (not used here, optional)
  # pull-requests: write # only if modifying PRs (not used here)

env:
  DOCKER_APP_IMAGE_NAME: 'ghcr.io/hasadna/open-bus-backend/open-bus-backend'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  HASADNA_K8S_DEPLOY_KEY: ${{ secrets.HASADNA_K8S_DEPLOY_KEY }}
  SKIP_CI: ${{ secrets.SKIP_CI || '' }}

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for skip CI
        run: |
          if [[ "${SKIP_CI}" == "true" ]]; then
            echo "SKIP_CI is set. Skipping CI."
            exit 0
          fi
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if echo "$COMMIT_MSG" | grep -iqE '\[skip ci\]|\[ci skip\]'; then
            echo "Commit message requests to skip CI. Skipping."
            exit 0
          fi
      - name: Check environment variables and Docker login
        run: |
          for var in DOCKER_APP_IMAGE_NAME GITHUB_TOKEN HASADNA_K8S_DEPLOY_KEY; do
            if [ -z "${!var}" ]; then
              echo "Missing required environment variable: $var"
              exit 1
            fi
          done
          echo "${GITHUB_TOKEN}" | docker login ghcr.io -u hasadna --password-stdin
      - name: Build, tag, push Docker image and deploy
        run: |
          if docker pull "${DOCKER_APP_IMAGE_NAME}:latest"; then
            CACHE_FROM_ARG="--cache-from ${DOCKER_APP_IMAGE_NAME}:latest"
          else
            CACHE_FROM_ARG=""
          fi
          docker build $CACHE_FROM_ARG --build-arg VERSION=${GITHUB_SHA} -t app .
          docker tag app "${DOCKER_APP_IMAGE_NAME}:${GITHUB_SHA}"
          docker push "${DOCKER_APP_IMAGE_NAME}:${GITHUB_SHA}"
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            docker tag app "${DOCKER_APP_IMAGE_NAME}:latest"
            docker push "${DOCKER_APP_IMAGE_NAME}:latest"
            if ! git log -1 --pretty=format:"%s" | grep -- --no-deploy; then
              cd `mktemp -d`
              echo "${HASADNA_K8S_DEPLOY_KEY}" > hasadna_k8s_deploy_key
              chmod 400 hasadna_k8s_deploy_key
              export GIT_SSH_COMMAND="ssh -i `pwd`/hasadna_k8s_deploy_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
              git clone git@github.com:hasadna/hasadna-k8s.git
              cd hasadna-k8s
              python update_yaml.py '{"backendImage":"'"${DOCKER_APP_IMAGE_NAME}:${GITHUB_SHA}"'"}' apps/openbus/values-hasadna-auto-updated.yaml
              git config --global user.name "Open Bus Backend CI"
              git config --global user.email "open-bus-backend-ci@localhost"
              git add apps/openbus/values-hasadna-auto-updated.yaml && git commit -m "automatic update of open bus backend"
              git push origin master
            fi
          fi
